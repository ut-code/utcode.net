---
import { Picture } from "astro:assets";
import { getCollection, getEntry, render } from "astro:content";
import { format } from "date-fns";
import JoinUsCTA from "../../components/JoinUsCTA.astro";
import GlobalLayout from "../../layouts/GlobalLayout.astro";
import { Focus } from "../../schema";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  return articles.map((article) => ({
    params: { article: article.id },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await render(article);
const author =
  article.data.author && (await getEntry("members", article.data.author?.id));
if (article.data.author && !author)
  throw new Error(
    `Author not found for article ${article.id}, searched for author ${article.data.author.id}`,
  );
---

<GlobalLayout
  title={article.data.title}
  description="ut.code(); のウェブサイトに書かれた記事のひとつです。"
  focus={Focus.articles}
  image={article.data.image}
>
  {
    article.data.image && (
      <div class="text-center lg:px-8">
        <Picture
          loading="eager"
          formats={["avif", "webp"]}
          class="mx-auto md:max-w-xl md:rounded-2xl"
          alt="イメージ画像"
          src={article.data.image}
        />
      </div>
    )
  }
  <div
    id="meta"
    class="mx-auto mt-4 flex max-w-xl flex-wrap justify-around px-4 align-middle sm:gap-8"
  >
    {
      author && (
        <a
          href={`/members/${author.id}`}
          class="flex max-w-sm min-w-75 items-center gap-4 rounded-lg px-4 py-2 hover:bg-gray-100"
        >
          <div class="h-14 w-14 overflow-clip rounded-full bg-gray-200">
            <Picture
              alt="著者"
              formats={["avif", "webp"]}
              width="56"
              height="56"
              src={author.data.faceImage}
              class="h-full w-full"
            />
          </div>
          <div class="flex-1">
            <div class="text-lg">{author.data.nameJa}</div>
            <div class="text-sm text-gray-800">{author.data.description}</div>
          </div>
        </a>
      )
    }
    <time class="my-auto mt-4 text-gray-500">
      {format(article.data.date, "yyyy-MM-dd")}
    </time>
  </div>
  <main class="mx-auto">
    <h1 class="mx-auto my-8 max-w-2xl px-8 text-center text-2xl lg:text-3xl">
      {article.data.title}
    </h1>
    <article class="prose mx-auto max-w-xl px-8">
      <Content />
    </article>
  </main>
  <JoinUsCTA class="mt-24">
    ut.code(); に参加する準備はできましたか？
  </JoinUsCTA>
</GlobalLayout>
