---
import { getCollection } from "astro:content";
import ProjectList from "+/components/ProjectList.astro";
import GlobalLayout from "+/layouts/GlobalLayout.astro";
import { Focus } from "+/schema";
import { kinds } from "+contents/project-kinds.ts";

export function getStaticPaths() {
  return kinds.map((kind) => ({
    params: { kind: kind.path },
    props: { kind },
  }));
}

const kind = Astro.props.kind;

const projects = (await getCollection("projects"))
  .filter((project) => {
    return project.data.kind === kind.frontmatter;
  })
  .sort((a, b) => {
    const a_order = a.data.order ?? Number.POSITIVE_INFINITY;
    const b_order = b.data.order ?? Number.POSITIVE_INFINITY;
    if (a_order !== b_order) {
      return a_order - b_order;
    }
    return b.data.date.getTime() - a.data.date.getTime();
  });
---

<GlobalLayout
  title="長期プロジェクト"
  description="ut.code(); で長期間にわたって開発を行っているプロジェクトです。"
  focus={Focus.projects}
  image={null}
>
  <main class="container mx-auto px-4 py-24">
    <h1 class="text-center text-4xl">{kind.title}</h1>
    <div role="tablist" class="tabs tabs-lift">
      {
        kinds.map((tab) => (
          <a>
            <a
              role="tab"
              class:list={[
                "tab",
                { "tab-active": kind.frontmatter === tab.frontmatter },
              ]}
              href={tab.path ? `/projects/${tab.path}` : "/projects"}
            >
              {tab.tabTitle}
            </a>
          </a>
        ))
      }
    </div>
    {
      projects.length === 0 ? (
        <p class="mt-30 text-center text-gray-500">
          プロジェクトはまだありません。
        </p>
      ) : (
        <ProjectList {projects} class="mt-16" variant="full" />
      )
    }
    {
      projects.length < 10 && (
        <p class="mt-30 text-center text-gray-500">
          このページは準備中です。ほとんどのプロジェクトは反映されていません。
        </p>
      )
    }
  </main>
</GlobalLayout>
