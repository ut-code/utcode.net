---
import clsx from "clsx";
import { format } from "date-fns";
import nullthrows from "nullthrows";
import noImage from "../images/no-image.svg";
import type { Article } from "../schema";

interface Props {
  variant?: "normal" | "compact";
  articles: Article[];
  class?: string;
}
const props = Astro.props;
const { variant = "normal", articles } = props;
---

<!--
  fragment ArticleListArticle on Mdx {
    id
    frontmatter {
      date
      slug
      title
      image {
        childImageSharp {
          gatsbyImageData(
            width: 600
            height: 400
            transformOptions: { fit: INSIDE }
          )
          largeGatsbyImageData: gatsbyImageData(
            width: 1200
            height: 800
            transformOptions: { fit: INSIDE }
          )
        }
      }
    }
    excerpt(pruneLength: 60)
    longExcerpt: excerpt(pruneLength: 200)
  }
-->
<ul
  class:list={[
    "grid grid-flow-dense md:grid-cols-2 gap-9",
    variant === "normal" && "lg:grid-cols-3 xl:grid-cols-4",
    props.class,
  ]}
>
  {
    articles.map((article, i) => {
      const isFeatured = variant === "normal" && i % 11 === 0; // 11 記事ごとに大きく表示する
      const additionalProps = isFeatured
        ? {
            imageData: article.image,
            cellClassName: "md:col-span-2 md:row-span-2",
            imageClassName: "h-[350px] md:h-[450px]",
            excerpt: article.slug,
          }
        : {
            imageData: article.image,
            cellClassName: "",
            imageClassName: "h-[200px]",
            excerpt: article.excerpt,
          };
      return (
        <li key={article.id} className="contents">
          <a
            to={`/articles/${article.frontmatter?.slug}/`}
            className={clsx(
              "block hover:opacity-80",
              additionalProps.cellClassName,
            )}
          >
            <div
              className={clsx(
                "w-full h-48 object-cover rounded-xl overflow-clip isolate",
                additionalProps.imageClassName,
              )}
            >
              {additionalProps.imageData ? (
                <GatsbyImage
                  alt="カバー画像"
                  image={additionalProps.imageData}
                  className="w-full h-full object-cover"
                />
              ) : (
                <img
                  alt="画像なし"
                  src={noImage}
                  className="w-full h-full object-cover"
                />
              )}
            </div>
            <div className="mt-4">
              <time className="block text-gray-500 text-sm">
                {format(
                  new Date(
                    nullthrows(article.frontmatter?.date, "日付が未設定"),
                  ),
                  "yyyy/MM/dd HH:mm",
                )}
              </time>
              <h3 className="text-lg font-bold">
                {article.frontmatter?.title}
              </h3>
              <p className="prose max-w-none mt-2">{additionalProps.excerpt}</p>
            </div>
          </a>
        </li>
      );
    })
  }
</ul>
); }

