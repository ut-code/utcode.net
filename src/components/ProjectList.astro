---
import { Image } from "astro:assets";
import type { Project } from "../schema";

interface Props {
  projects: {
    data: Project;
  }[];
  class?: string;
}
const props = Astro.props;
const { projects } = props;
// export const query = graphql`
//   fragment ProjectListProject on Mdx {
//     id
//     frontmatter {
//       date
//       slug
//       title
//       image {
//         childImageSharp {
//           gatsbyImageData(
//             width: 800
//             height: 600
//             transformOptions: { fit: INSIDE }
//           )
//         }
//       }
//       description
//     }
//   }
// `;
---

<ul class:list={["grid md:grid-cols-2 xl:grid-cols-3 gap-9", props.class]}>
  {
    projects.map((project) => (
      <li class="contents">
        <a
          class="hover:brightness-95 rounded-xl overflow-clip border border-gray-200 bg-white"
          href={`/projects/${project.data.slug}/`}
        >
          <Image
            width="800"
            height="600"
            alt="プロジェクトのイメージ画像"
            src={project.data.image}
            class="w-full h-[16rem] object-cover"
          />
          <div class="p-4">
            <h3 class="text-xl font-bold">{project.data.title}</h3>
            <p class="mt-2 prose">
              {project.data.description.length < 120
                ? project.data.description
                : project.data.description.slice(0, 120)}
            </p>
          </div>
        </a>
      </li>
    ))
  }
</ul>
